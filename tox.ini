[tox]
min_version = 4
env_list =
    lint,
    mypy-{api,pkg},
    docs,
    py3{8,9,10,11,12,13}{,-pyopenssl}{,-oldest}{,-idna},
    coverage-report


[testenv]
package = wheel
wheel_build_env = .pkg
extras =
    tests
    idna: idna
deps =
    pyopenssl: pyopenssl
pass_env =
    FORCE_COLOR
    NO_COLOR
set_env =
    oldest: PIP_CONSTRAINT = tests/constraints/oldest-cryptography.txt
    pyopenssl-oldest: PIP_CONSTRAINT = tests/constraints/oldest-pyopenssl.txt
commands =
    coverage run -m pytest {posargs}
    py312-pyopenssl-latest-idna: coverage run -m pytest --doctest-modules --doctest-glob='*.rst' {posargs}


[testenv:coverage-report]
# keep in-sync with .python-version-default
base_python = py312
deps = coverage[toml]>=5.0.2
skip_install = true
commands =
    coverage combine
    coverage report


[testenv:lint]
skip_install = true
deps = pre-commit-uv
commands = pre-commit run --all-files {posargs}


[testenv:mypy-api]
extras = mypy
commands = mypy tests/typing docs/pyopenssl_example.py


[testenv:mypy-pkg]
extras = mypy
commands = mypy src


[testenv:docs]
# Keep in-sync with gh-actions and .readthedocs.yaml.
base_python = py312
extras = docs
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html

[testenv:docs-watch]
package = editable
base_python = {[testenv:docs]base_python}
extras = {[testenv:docs]extras}
deps = watchfiles
commands =
    watchfiles \
        --ignore-paths docs/_build/ \
        'sphinx-build -W -n --jobs auto -b html -d {envtmpdir}/doctrees docs docs/_build/html' \
        src \
        docs

[testenv:docs-linkcheck]
base_python = {[testenv:docs]base_python}
extras = {[testenv:docs]extras}
commands = sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees docs docs/_build/html
